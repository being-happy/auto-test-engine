// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v3.20.3
// source: src/auto-test-go/contract/api.proto

package contract

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ListenType int32

const (
	ListenType_ALL           ListenType = 0
	ListenType_SingleCommand ListenType = 1
)

// Enum value maps for ListenType.
var (
	ListenType_name = map[int32]string{
		0: "ALL",
		1: "SingleCommand",
	}
	ListenType_value = map[string]int32{
		"ALL":           0,
		"SingleCommand": 1,
	}
)

func (x ListenType) Enum() *ListenType {
	p := new(ListenType)
	*p = x
	return p
}

func (x ListenType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ListenType) Descriptor() protoreflect.EnumDescriptor {
	return file_src_auto_test_go_contract_api_proto_enumTypes[0].Descriptor()
}

func (ListenType) Type() protoreflect.EnumType {
	return &file_src_auto_test_go_contract_api_proto_enumTypes[0]
}

func (x ListenType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ListenType.Descriptor instead.
func (ListenType) EnumDescriptor() ([]byte, []int) {
	return file_src_auto_test_go_contract_api_proto_rawDescGZIP(), []int{0}
}

type CaseType int32

const (
	CaseType_USER_CASE     CaseType = 0
	CaseType_SCENARIO_CASE CaseType = 1
)

// Enum value maps for CaseType.
var (
	CaseType_name = map[int32]string{
		0: "USER_CASE",
		1: "SCENARIO_CASE",
	}
	CaseType_value = map[string]int32{
		"USER_CASE":     0,
		"SCENARIO_CASE": 1,
	}
)

func (x CaseType) Enum() *CaseType {
	p := new(CaseType)
	*p = x
	return p
}

func (x CaseType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CaseType) Descriptor() protoreflect.EnumDescriptor {
	return file_src_auto_test_go_contract_api_proto_enumTypes[1].Descriptor()
}

func (CaseType) Type() protoreflect.EnumType {
	return &file_src_auto_test_go_contract_api_proto_enumTypes[1]
}

func (x CaseType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CaseType.Descriptor instead.
func (CaseType) EnumDescriptor() ([]byte, []int) {
	return file_src_auto_test_go_contract_api_proto_rawDescGZIP(), []int{1}
}

type RunStatus int32

const (
	RunStatus_UNDO    RunStatus = 0
	RunStatus_RUNNING RunStatus = 1
	RunStatus_DONE    RunStatus = 2
)

// Enum value maps for RunStatus.
var (
	RunStatus_name = map[int32]string{
		0: "UNDO",
		1: "RUNNING",
		2: "DONE",
	}
	RunStatus_value = map[string]int32{
		"UNDO":    0,
		"RUNNING": 1,
		"DONE":    2,
	}
)

func (x RunStatus) Enum() *RunStatus {
	p := new(RunStatus)
	*p = x
	return p
}

func (x RunStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RunStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_src_auto_test_go_contract_api_proto_enumTypes[2].Descriptor()
}

func (RunStatus) Type() protoreflect.EnumType {
	return &file_src_auto_test_go_contract_api_proto_enumTypes[2]
}

func (x RunStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RunStatus.Descriptor instead.
func (RunStatus) EnumDescriptor() ([]byte, []int) {
	return file_src_auto_test_go_contract_api_proto_rawDescGZIP(), []int{2}
}

type CaseCommandSubRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommandId string `protobuf:"bytes,1,opt,name=command_id,json=commandId,proto3" json:"command_id,omitempty"`
	ClientId  string `protobuf:"bytes,2,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
}

func (x *CaseCommandSubRequest) Reset() {
	*x = CaseCommandSubRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_src_auto_test_go_contract_api_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CaseCommandSubRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CaseCommandSubRequest) ProtoMessage() {}

func (x *CaseCommandSubRequest) ProtoReflect() protoreflect.Message {
	mi := &file_src_auto_test_go_contract_api_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CaseCommandSubRequest.ProtoReflect.Descriptor instead.
func (*CaseCommandSubRequest) Descriptor() ([]byte, []int) {
	return file_src_auto_test_go_contract_api_proto_rawDescGZIP(), []int{0}
}

func (x *CaseCommandSubRequest) GetCommandId() string {
	if x != nil {
		return x.CommandId
	}
	return ""
}

func (x *CaseCommandSubRequest) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

type StreamCaseCommandSubResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type      CaseType  `protobuf:"varint,1,opt,name=type,proto3,enum=contract.CaseType" json:"type,omitempty"`
	CommandId string    `protobuf:"bytes,2,opt,name=command_id,json=commandId,proto3" json:"command_id,omitempty"`
	Status    RunStatus `protobuf:"varint,3,opt,name=status,proto3,enum=contract.RunStatus" json:"status,omitempty"`
	CaseId    string    `protobuf:"bytes,4,opt,name=case_id,json=caseId,proto3" json:"case_id,omitempty"`
}

func (x *StreamCaseCommandSubResponse) Reset() {
	*x = StreamCaseCommandSubResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_src_auto_test_go_contract_api_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StreamCaseCommandSubResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamCaseCommandSubResponse) ProtoMessage() {}

func (x *StreamCaseCommandSubResponse) ProtoReflect() protoreflect.Message {
	mi := &file_src_auto_test_go_contract_api_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamCaseCommandSubResponse.ProtoReflect.Descriptor instead.
func (*StreamCaseCommandSubResponse) Descriptor() ([]byte, []int) {
	return file_src_auto_test_go_contract_api_proto_rawDescGZIP(), []int{1}
}

func (x *StreamCaseCommandSubResponse) GetType() CaseType {
	if x != nil {
		return x.Type
	}
	return CaseType_USER_CASE
}

func (x *StreamCaseCommandSubResponse) GetCommandId() string {
	if x != nil {
		return x.CommandId
	}
	return ""
}

func (x *StreamCaseCommandSubResponse) GetStatus() RunStatus {
	if x != nil {
		return x.Status
	}
	return RunStatus_UNDO
}

func (x *StreamCaseCommandSubResponse) GetCaseId() string {
	if x != nil {
		return x.CaseId
	}
	return ""
}

var File_src_auto_test_go_contract_api_proto protoreflect.FileDescriptor

var file_src_auto_test_go_contract_api_proto_rawDesc = []byte{
	0x0a, 0x23, 0x73, 0x72, 0x63, 0x2f, 0x61, 0x75, 0x74, 0x6f, 0x2d, 0x74, 0x65, 0x73, 0x74, 0x2d,
	0x67, 0x6f, 0x2f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x2f, 0x61, 0x70, 0x69, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x22,
	0x53, 0x0a, 0x15, 0x43, 0x61, 0x73, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x53, 0x75,
	0x62, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x6d,
	0x61, 0x6e, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f,
	0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x49, 0x64, 0x22, 0xab, 0x01, 0x0a, 0x1c, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x43,
	0x61, 0x73, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x53, 0x75, 0x62, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x26, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x12, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x2e, 0x43,
	0x61, 0x73, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x1d, 0x0a,
	0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x49, 0x64, 0x12, 0x2b, 0x0a, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e, 0x63,
	0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x2e, 0x52, 0x75, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x17, 0x0a, 0x07, 0x63, 0x61, 0x73,
	0x65, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x63, 0x61, 0x73, 0x65,
	0x49, 0x64, 0x2a, 0x28, 0x0a, 0x0a, 0x4c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x07, 0x0a, 0x03, 0x41, 0x4c, 0x4c, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x53, 0x69, 0x6e,
	0x67, 0x6c, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x10, 0x01, 0x2a, 0x2c, 0x0a, 0x08,
	0x43, 0x61, 0x73, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0d, 0x0a, 0x09, 0x55, 0x53, 0x45, 0x52,
	0x5f, 0x43, 0x41, 0x53, 0x45, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x53, 0x43, 0x45, 0x4e, 0x41,
	0x52, 0x49, 0x4f, 0x5f, 0x43, 0x41, 0x53, 0x45, 0x10, 0x01, 0x2a, 0x2c, 0x0a, 0x09, 0x52, 0x75,
	0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x08, 0x0a, 0x04, 0x55, 0x4e, 0x44, 0x4f, 0x10,
	0x00, 0x12, 0x0b, 0x0a, 0x07, 0x52, 0x55, 0x4e, 0x4e, 0x49, 0x4e, 0x47, 0x10, 0x01, 0x12, 0x08,
	0x0a, 0x04, 0x44, 0x4f, 0x4e, 0x45, 0x10, 0x02, 0x32, 0x72, 0x0a, 0x19, 0x53, 0x74, 0x72, 0x65,
	0x61, 0x6d, 0x43, 0x61, 0x73, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x4c, 0x69, 0x73,
	0x74, 0x65, 0x6e, 0x65, 0x72, 0x12, 0x55, 0x0a, 0x06, 0x4c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x12,
	0x1f, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x2e, 0x43, 0x61, 0x73, 0x65, 0x43,
	0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x53, 0x75, 0x62, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x26, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x2e, 0x53, 0x74, 0x72, 0x65,
	0x61, 0x6d, 0x43, 0x61, 0x73, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x53, 0x75, 0x62,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x30, 0x01, 0x42, 0x17, 0x5a, 0x15,
	0x61, 0x75, 0x74, 0x6f, 0x2d, 0x74, 0x65, 0x73, 0x74, 0x2d, 0x67, 0x6f, 0x2f, 0x63, 0x6f, 0x6e,
	0x74, 0x72, 0x61, 0x63, 0x74, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_src_auto_test_go_contract_api_proto_rawDescOnce sync.Once
	file_src_auto_test_go_contract_api_proto_rawDescData = file_src_auto_test_go_contract_api_proto_rawDesc
)

func file_src_auto_test_go_contract_api_proto_rawDescGZIP() []byte {
	file_src_auto_test_go_contract_api_proto_rawDescOnce.Do(func() {
		file_src_auto_test_go_contract_api_proto_rawDescData = protoimpl.X.CompressGZIP(file_src_auto_test_go_contract_api_proto_rawDescData)
	})
	return file_src_auto_test_go_contract_api_proto_rawDescData
}

var file_src_auto_test_go_contract_api_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_src_auto_test_go_contract_api_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_src_auto_test_go_contract_api_proto_goTypes = []interface{}{
	(ListenType)(0),                      // 0: contract.ListenType
	(CaseType)(0),                        // 1: contract.CaseType
	(RunStatus)(0),                       // 2: contract.RunStatus
	(*CaseCommandSubRequest)(nil),        // 3: contract.CaseCommandSubRequest
	(*StreamCaseCommandSubResponse)(nil), // 4: contract.StreamCaseCommandSubResponse
}
var file_src_auto_test_go_contract_api_proto_depIdxs = []int32{
	1, // 0: contract.StreamCaseCommandSubResponse.type:type_name -> contract.CaseType
	2, // 1: contract.StreamCaseCommandSubResponse.status:type_name -> contract.RunStatus
	3, // 2: contract.StreamCaseCommandListener.Listen:input_type -> contract.CaseCommandSubRequest
	4, // 3: contract.StreamCaseCommandListener.Listen:output_type -> contract.StreamCaseCommandSubResponse
	3, // [3:4] is the sub-list for method output_type
	2, // [2:3] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_src_auto_test_go_contract_api_proto_init() }
func file_src_auto_test_go_contract_api_proto_init() {
	if File_src_auto_test_go_contract_api_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_src_auto_test_go_contract_api_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CaseCommandSubRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_src_auto_test_go_contract_api_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StreamCaseCommandSubResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_src_auto_test_go_contract_api_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_src_auto_test_go_contract_api_proto_goTypes,
		DependencyIndexes: file_src_auto_test_go_contract_api_proto_depIdxs,
		EnumInfos:         file_src_auto_test_go_contract_api_proto_enumTypes,
		MessageInfos:      file_src_auto_test_go_contract_api_proto_msgTypes,
	}.Build()
	File_src_auto_test_go_contract_api_proto = out.File
	file_src_auto_test_go_contract_api_proto_rawDesc = nil
	file_src_auto_test_go_contract_api_proto_goTypes = nil
	file_src_auto_test_go_contract_api_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// StreamCaseCommandListenerClient is the client API for StreamCaseCommandListener service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type StreamCaseCommandListenerClient interface {
	Listen(ctx context.Context, in *CaseCommandSubRequest, opts ...grpc.CallOption) (StreamCaseCommandListener_ListenClient, error)
}

type streamCaseCommandListenerClient struct {
	cc grpc.ClientConnInterface
}

func NewStreamCaseCommandListenerClient(cc grpc.ClientConnInterface) StreamCaseCommandListenerClient {
	return &streamCaseCommandListenerClient{cc}
}

func (c *streamCaseCommandListenerClient) Listen(ctx context.Context, in *CaseCommandSubRequest, opts ...grpc.CallOption) (StreamCaseCommandListener_ListenClient, error) {
	stream, err := c.cc.NewStream(ctx, &_StreamCaseCommandListener_serviceDesc.Streams[0], "/contract.StreamCaseCommandListener/Listen", opts...)
	if err != nil {
		return nil, err
	}
	x := &streamCaseCommandListenerListenClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type StreamCaseCommandListener_ListenClient interface {
	Recv() (*StreamCaseCommandSubResponse, error)
	grpc.ClientStream
}

type streamCaseCommandListenerListenClient struct {
	grpc.ClientStream
}

func (x *streamCaseCommandListenerListenClient) Recv() (*StreamCaseCommandSubResponse, error) {
	m := new(StreamCaseCommandSubResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// StreamCaseCommandListenerServer is the server API for StreamCaseCommandListener service.
type StreamCaseCommandListenerServer interface {
	Listen(*CaseCommandSubRequest, StreamCaseCommandListener_ListenServer) error
}

// UnimplementedStreamCaseCommandListenerServer can be embedded to have forward compatible implementations.
type UnimplementedStreamCaseCommandListenerServer struct {
}

func (*UnimplementedStreamCaseCommandListenerServer) Listen(*CaseCommandSubRequest, StreamCaseCommandListener_ListenServer) error {
	return status.Errorf(codes.Unimplemented, "method Listen not implemented")
}

func RegisterStreamCaseCommandListenerServer(s *grpc.Server, srv StreamCaseCommandListenerServer) {
	s.RegisterService(&_StreamCaseCommandListener_serviceDesc, srv)
}

func _StreamCaseCommandListener_Listen_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(CaseCommandSubRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(StreamCaseCommandListenerServer).Listen(m, &streamCaseCommandListenerListenServer{stream})
}

type StreamCaseCommandListener_ListenServer interface {
	Send(*StreamCaseCommandSubResponse) error
	grpc.ServerStream
}

type streamCaseCommandListenerListenServer struct {
	grpc.ServerStream
}

func (x *streamCaseCommandListenerListenServer) Send(m *StreamCaseCommandSubResponse) error {
	return x.ServerStream.SendMsg(m)
}

var _StreamCaseCommandListener_serviceDesc = grpc.ServiceDesc{
	ServiceName: "contract.StreamCaseCommandListener",
	HandlerType: (*StreamCaseCommandListenerServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "Listen",
			Handler:       _StreamCaseCommandListener_Listen_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "src/auto-test-go/contract/api.proto",
}
